
DROP TABLE IF EXISTS property_services;
DROP TABLE IF EXISTS services;
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS payment;
DROP TABLE IF EXISTS reservations;
DROP TABLE IF EXISTS property;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS address;

CREATE TABLE IF NOT EXISTS address(
    -- address_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    pincode BIGINT PRIMARY KEY,
    -- street_name VARCHAR(255) NOT NULL,
    city VARCHAR(50) NOT NULL,
    state VARCHAR(50) NOT NULL
    -- pincode VARCHAR(50) NOT NULL
);


CREATE TABLE IF NOT EXISTS users(
    user_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    email_verified_at TIMESTAMP(0) NULL,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    phone_number VARCHAR(255) NOT NULL,
    apt_no VARCHAR(50),
    street_name VARCHAR(255) NOT NULL,
    pincode BIGINT,
	CONSTRAINT users_email_unique UNIQUE(email),    
	CONSTRAINT user_pincode_foreign FOREIGN KEY(pincode) REFERENCES address(pincode) ON DELETE SET NULL
	
) ;


CREATE TABLE IF NOT EXISTS property (
    property_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(500) NOT NULL,
    room_type VARCHAR(10) NOT NULL,
    total_occupancy INT NOT NULL,
    total_bedrooms INT NOT NULL,
    total_bathrooms INT NOT NULL,
    description VARCHAR(255) NOT NULL,
    price_per_day INT NOT NULL,
    published_at TIMESTAMP(0) NOT NULL,
    owner_id BIGINT NOT NULL,
    created_at TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    apt_no VARCHAR(50),
    street_name VARCHAR(255) NOT NULL,
    pincode BIGINT NOT NULL,
    is_listed VARCHAR(1) NOT NULL,
	CONSTRAINT property_owner_id_foreign FOREIGN KEY(owner_id) REFERENCES users(user_id) ON DELETE CASCADE,
	CONSTRAINT property_pincode_foreign FOREIGN KEY(pincode) REFERENCES address(pincode)  ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS services(
    service_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS property_services(
    property_id BIGINT NOT NULL,
    service_id BIGINT NOT NULL,
	PRIMARY KEY (property_id,service_id),
	CONSTRAINT property_services_owner_id_foreign FOREIGN KEY(property_id) REFERENCES property(property_id) ON DELETE CASCADE,	
	CONSTRAINT property_services_foreign FOREIGN KEY(service_id) REFERENCES services(service_id) ON DELETE CASCADE
);



CREATE TABLE IF NOT EXISTS reviews(
    review_id BIGINT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id BIGINT NOT NULL,
    property_id BIGINT NOT NULL,
    rating FLOAT NOT NULL,
    comment VARCHAR(1000) NOT NULL,
	CONSTRAINT reviews_property_id_foreign FOREIGN KEY(property_id) REFERENCES property(property_id) ON DELETE CASCADE,	
	CONSTRAINT reviews_user_id_foreign FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reservations(
    reservation_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    user_id BIGINT NOT NULL,
    room_id BIGINT NOT NULL,
    start_date TIMESTAMP(0) NOT NULL,
    end_date TIMESTAMP(0) NOT NULL,
    price_per_day INT NOT NULL,
    total INT NOT NULL,
    created_at TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT reservations_property_id_foreign FOREIGN KEY(room_id) REFERENCES property(property_id) ON DELETE CASCADE,	
	CONSTRAINT reservations_user_id_foreign FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS payment(
    payment_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    reservation_id BIGINT NOT NULL,
    amount DECIMAL(8, 2) NOT NULL,
    mode VARCHAR(10) NOT NULL,
    pay_date TIMESTAMP(0) NOT NULL,	
	CONSTRAINT payment_property_id_foreign FOREIGN KEY(reservation_id) REFERENCES reservations(reservation_id) ON DELETE SET NULL
);

